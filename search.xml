<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>hexo</title>
    <url>/2019/11/24/tool/hexo/</url>
    <content><![CDATA[<h2 id="Node-js-安装"><a href="#Node-js-安装" class="headerlink" title="Node.js 安装"></a>Node.js 安装</h2><h4 id="安装hexo"><a href="#安装hexo" class="headerlink" title="安装hexo"></a>安装hexo</h4><pre><code>创建 Hexo 项目
1.进入该目录
2.hexo init
3.cnpm install</code></pre><h4 id="本地的博客内容同步到-Github"><a href="#本地的博客内容同步到-Github" class="headerlink" title="本地的博客内容同步到 Github"></a>本地的博客内容同步到 Github</h4><pre><code>创建SSH
部署相关的 hexo 插件，Git Bash 中输
1.cnpm install hexo -server --save
2.cnpm install hexo-deployer-git --save</code></pre><h3 id="发布"><a href="#发布" class="headerlink" title="发布"></a>发布</h3><pre><code>继续在 Git Bash 中输入命令：
1.先清除掉已经生成的旧文件：hexo clean
2.再生成一次静态文件：hexo generate
3.在本地预览下：hexo server</code></pre>]]></content>
  </entry>
  <entry>
    <title>redis基础</title>
    <url>/2019/11/24/linux/redis/</url>
    <content><![CDATA[<hr>
<ul>
<li><p>Win+R快捷键，输入CMD，进入CMD窗口，进入解压后文件所在路径，并输入以下指令：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">redis-server.exe redis.windows.conf</span><br></pre></td></tr></table></figure>
</li>
<li><p>启动客户端</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">redis-cli.exe</span><br></pre></td></tr></table></figure>
</li>
<li><p>密码登录：如果设置了登录密码，则需要再输入密码才能登陆成功</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">auth yourPasspord</span><br></pre></td></tr></table></figure>
</li>
<li><p>设置密码</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">CONFIG SET requirepass myPassword</span><br></pre></td></tr></table></figure>
</li>
<li><p>退出客户端</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">quit</span><br></pre></td></tr></table></figure>
</li>
<li><p>php安装redis扩展</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1.phpinfo()函数查看PHP的版本信息，下载对应的扩展版本</span><br><span class="line">2.php_redis-2.2.5-5.6-ts-vc11-x64.zip和php_igbinary-1.2.1-5.5-ts-vc11-x64.zip(对应的版本信息)</span><br><span class="line">3.copy到ext目录</span><br><span class="line">4.修改php.ini，在该文件中加入：</span><br><span class="line">  ; php_redis</span><br><span class="line">  extension=php_igbinary.dll</span><br><span class="line">  extension=php_redis.dll</span><br></pre></td></tr></table></figure>
</li>
<li><p>常用</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"> 1.$redis = new \Redis();</span><br><span class="line">   $redis-&gt;connect(&apos;127.0.0.1&apos;,6379);</span><br><span class="line">   $redis-&gt;auth(&apos;password&apos;);</span><br><span class="line"> 2.$redis-&gt;exists($key);</span><br><span class="line">   $redis-&gt;hSet();</span><br><span class="line">   $redis-&gt;set(&apos;key&apos;,$value);</span><br><span class="line">   $redis-&gt;hGet();</span><br><span class="line">   $redis-&gt;hdel();</span><br><span class="line">   $redis-&gt;expire($key,86400);</span><br><span class="line">3.事务</span><br><span class="line">   $redis-&gt;multi();</span><br><span class="line">   $res = $redis-&gt;exec();</span><br></pre></td></tr></table></figure></li>
</ul>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
  </entry>
  <entry>
    <title>git状态和撤销提交</title>
    <url>/2019/11/24/linux/git%E7%9A%84%E7%8A%B6%E6%80%81/</url>
    <content><![CDATA[<h2 id="Git的几种状态"><a href="#Git的几种状态" class="headerlink" title="Git的几种状态"></a>Git的几种状态</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">未修改</span><br><span class="line">       原始内容</span><br><span class="line">已修改    ↓   </span><br><span class="line">       工 作 区</span><br><span class="line">已暂存    ↓    git add</span><br><span class="line">       暂 存 区</span><br><span class="line">已提交    ↓    git commit</span><br><span class="line">       本地仓库</span><br><span class="line">已推送    ↓    git push</span><br><span class="line">       远程仓库</span><br></pre></td></tr></table></figure>

<h3 id="已修改-未暂存-使用以下任意命令"><a href="#已修改-未暂存-使用以下任意命令" class="headerlink" title="已修改 未暂存(使用以下任意命令)"></a>已修改 未暂存(使用以下任意命令)</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">已经修改了文件，还未进行git add.即工作区的内容不想要了</span><br><span class="line">1.git checkout .</span><br><span class="line">2.git checkout -- &lt;FILENAME&gt;</span><br><span class="line">3.git reset --hard</span><br></pre></td></tr></table></figure>

<h3 id="已暂存-未提交-git-add"><a href="#已暂存-未提交-git-add" class="headerlink" title="已暂存 未提交(git add.)"></a>已暂存 未提交(git add.)</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">已经进行了git add，还未进行git commit.即暂存区的内容不想要了</span><br><span class="line">1.git reset,git checkout .</span><br><span class="line">2.git reset --hard</span><br><span class="line">3.git reset HEAD</span><br><span class="line">4.git reset HEAD -- &lt;FILENAME&gt;</span><br></pre></td></tr></table></figure>

<h3 id="已提交-未推送-git-commit"><a href="#已提交-未推送-git-commit" class="headerlink" title="已提交 未推送(git commit)"></a>已提交 未推送(git commit)</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">已经进行了git commit，还未进行git push;使用远程仓库覆盖本地仓库</span><br><span class="line">1.git reset --hard origin/master</span><br></pre></td></tr></table></figure>

<h3 id="已推送-git-push"><a href="#已推送-git-push" class="headerlink" title="已推送(git push)"></a>已推送(git push)</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">回滚本地仓库，强制推送覆盖远程仓库</span><br><span class="line">git reset --hard HEAD^</span><br><span class="line">git push -f</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
  </entry>
  <entry>
    <title>linux基础</title>
    <url>/2019/11/24/linux/linux%E5%9F%BA%E7%A1%80/</url>
    <content><![CDATA[<table>
<thead>
<tr>
<th>命令</th>
<th>用途</th>
</tr>
</thead>
<tbody><tr>
<td>uname –help</td>
<td>内核名称、内核版本、硬件名称、硬件平台、操作系统</td>
</tr>
<tr>
<td>cat /proc/cpuinfo</td>
<td>CPU 详细信息</td>
</tr>
<tr>
<td>env</td>
<td>环境变量</td>
</tr>
<tr>
<td>free –help</td>
<td>查看内存使用量和交换区使用量</td>
</tr>
<tr>
<td>df –help</td>
<td>查看文件系统信息</td>
</tr>
<tr>
<td>du –help</td>
<td>汇总目录文件使用情况</td>
</tr>
<tr>
<td>uptime</td>
<td>查看系统运行时间、用户数、负载</td>
</tr>
<tr>
<td>cat /proc/loadavg</td>
<td>查看系统负载</td>
</tr>
<tr>
<td>ifconfig</td>
<td>查看防火墙设置</td>
</tr>
<tr>
<td>route –help</td>
<td>查看路由表</td>
</tr>
<tr>
<td>netstat -lntp</td>
<td>查看所有监听端口</td>
</tr>
<tr>
<td>netstat -nap</td>
<td>grep 80(2755)</td>
</tr>
<tr>
<td>kill</td>
<td>进程终止</td>
</tr>
<tr>
<td>killall</td>
<td>根据名称终止进程</td>
</tr>
<tr>
<td>ps -ef</td>
<td>查看所有进程</td>
</tr>
<tr>
<td>top</td>
<td>显示进程状态</td>
</tr>
<tr>
<td>who</td>
<td>查看当前登录用户</td>
</tr>
<tr>
<td>last</td>
<td>查看用户登录日志</td>
</tr>
<tr>
<td>cut -d: -f1 /etc/passwd</td>
<td>查看系统所有用户</td>
</tr>
<tr>
<td>cut -d: -f1 /etc/group</td>
<td>查看系统所有组</td>
</tr>
<tr>
<td>crontab -l</td>
<td>查看当前用户计划任务</td>
</tr>
<tr>
<td>rpm -qa</td>
<td>查看所有安装的软件包</td>
</tr>
<tr>
<td>date</td>
<td>系统时间</td>
</tr>
<tr>
<td>reboot</td>
<td>系统重启</td>
</tr>
<tr>
<td>poweroff</td>
<td>关机</td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
  </entry>
  <entry>
    <title>love</title>
    <url>/2019/11/23/life/love/</url>
    <content><![CDATA[<hr>
<pre><code>  一九七六年的冬天，当时我十九岁，在休斯顿太空总署的大空梭实验室里工作，同时也在总署旁边的休斯顿大学主修电脑。纵然忙于学校、睡眠与工作之间，这几乎占据了我一天二十四小时的全部时间，但只要有多余的一分钟，我总是会把所有的精力放在我的音乐创作上。
  我知道写歌词不是我的专长，所以在这段日子里，我处处寻找一位善写歌、词的搭档，与我一起合作创作。我认识了一位朋友，她的名字叫凡內芮（Valerie Johnson）。自从二十多年前离开德州后，就再也没听过她的消息，但是她却在我事业的起步时，给了我最大的鼓励。仅十九岁的凡內芮在德州的诗词比赛中，不知得过多少奖牌。她的写作总是让我爱不释手，当时我们的确合写了许多很好的作品，一直到今天，我仍然 认为这些作品充满了特色与创意。
  一个星期六的周末，凡內芮又热情地邀请我至她家的牧场烤肉。她的家族是德州有名的石油大亨，拥有庞大的牧场。她的家庭虽然极为富有，但她的穿着、所开的车、与她谦诚待人的态度，更让我加倍地打从心底佩服她。凡內芮知道我对音乐的执着。然而，面对那遥远的音乐界及整个美国陌生的唱片市场，我们一点管道都没有。此时，我们两个人坐在德州的乡下，我们哪知道下一步该如何走。突然间，她冒出了一句话：
 &quot; Visualize ，What you are doing in 5 years？ ﹙想像你五年后在做什么？﹚&quot; 我愣了一下。她转过身来，手指着我说：&quot;嘿！告诉我，你心目中’最希望’五年后的你在做什么，你那个时候的生活是一个什么样子？&quot;我还来不及回答，她又抢着 说：&quot;別急，你先仔细想想，完全想好，确定后再说出来。&quot;我沉思了几分钟，开始告诉她：&quot;第一，五年后，我希望能有一张唱片在市场上，而这张唱片很受欢迎，可以得到许多人的肯定。第二，我住在一个有很多很多音乐的地方，能天天与一些世界一流的乐师一起工作。&quot;
 凡內芮说：&quot;你确定了吗？&quot; 我慢慢稳稳地回答，而且拉了一个很长的Yesssssss！凡內芮接着说：&quot;好，既然你确定了，我们就把这个目标倒算回来。如果第五年，你有一张唱片在市场上，那么你的第四年一定是要跟一家唱片公司签上合约。&quot;那么你的第三年一定是要有一个完整的作品，可以拿给很多很多的唱片公 司听，对不对？&quot;&quot;那么你的第二年，一定要有很棒的作品开始录音了。&quot;&quot;那么你的第一年，就一定要把你所有要准备录音的作品全部编曲，排练就位准备好。&quot;&quot;那么你的第六个月，就是要把那些没有完成的作品修饰好，然后让你自己可以逐一筛选。&quot;&quot;那么你的第一个月就是要把目前这几首曲子完工。&quot;&quot;那么你的第一个礼拜就是要先列出一整个清单，排出哪些曲子需要修改， 哪些需要完工。&quot;&quot;好了，我们现在不就已经知道你下个星期一要做什么了吗？&quot;凡內芮笑笑地说。&quot;喔，对了。你还说你五年后，要生活在一个有很多音乐的地方，然后与许多一流的乐师一起忙着工作，对吗？&quot;她急忙地补充说。&quot;如果，你的第五年已经在与这些人一起工作，那么你的第四年照道理应该有你自己的一个工作室或录音室。那么你的第三年，可能是先跟这个圈子里的人在一起工作。那么你的第二年，应该不是住在德州，而是已经住在纽约或是洛杉机了。&quot;
  次年(一九七七年)，我辞掉了令许多人羨慕的太空总署的工作，离开了休斯顿，搬到洛杉机。说也奇怪：不敢说是恰好五年，但大约可说是第六年。一九八三年，我的唱片在亚洲开始销起来，我一天二十四小时几乎全都忙着与一些顶尖的音乐高手，日出日落地一起工作。每当我在最困惑的时候，我会静下来问我自己：五年后你&quot;最希望&quot;看到你自己在做什么？如果，你自己都不知道这个答案的话，你又如何要求別人或上帝为你做选择或开路呢？ 別忘了！在生命中，上帝已经把所有&quot;选择&quot;的权力交在我们的手上了。
   如果，你对你的生命经常在问&quot;为什么会这样？&quot;&quot;为什么会那样？&quot;的时候，你不妨试着问一下自己，你是否很&quot;清清楚楚&quot;地知道你自己要的是什么如果连你自己要的是什么都不知道的话，那么爱你的主又如何帮你安排呢？不是吗？而在你旁边的人，再怎么热心地为你敲锣打鼓，爱你的主也顶多给一些慈悲的安慰。因为连你自己都还没有清楚地告诉他，你要的是什么？那么你又岂能无辜地怪上帝没有为你开路呢？不是吗？
  有这样一篇调查似乎也说明了什么：有一年，一群意气风发的天之骄子从美国哈佛大学毕业了，他们即将开始穿越各自的玉米地。他们的智力、学历、环境条件都相差无几。在临出校门前，哈佛对他们进行了一次关于人生目标的调查。结果是这样的：27％的人，没有目标；60％的人，目标模糊；10％的人，有清晰但比较短期的目标；3％的人，有清晰而长远的目标。
以后的25年，他们穿越玉米地。25年后，哈佛再次对这群学生进行了跟踪调查。结果又是这样的：3％的人，25年间他们朝着一个方向不懈努力，几乎都为社会各界的成功人士，其中不乏行业领袖、社会精英；10％的人，他们的短期目标不断地实现，成为各个领域中的专业人士，大都生活在社会的中上层；</code></pre><p>60％的人，他们安稳地生活与工作，但都没有什么特别成绩，几乎都生活在社会的中下层；剩下27％的人，他们的生活没有目标，过得很不如意，并且常常在抱怨他人、抱怨社会、抱怨这个“不肯给他们机会”的世界。<br>其实，他们之间的差别仅仅在于：25年前，他们中的一些人知道为什么要穿越玉米地，而另一些人则不清楚或不很清楚。<br>故事到此完结，具体到底是真是假，我也不知道，因为我看到的时候就是不具名的，不知道是何人所写。不过，在这里，我们的确看到了人生职业规划的重要性，在将这个规划细细拆分，我们马上就会发现，其实我们根本没有时间停下来发呆。</p>
<hr>
]]></content>
      <categories>
        <category>生活</category>
      </categories>
  </entry>
  <entry>
    <title>怦然心动</title>
    <url>/2019/11/23/goal/sport/</url>
    <content><![CDATA[<h4 id="1-一次整理好，彻底的整理好"><a href="#1-一次整理好，彻底的整理好" class="headerlink" title="1.一次整理好，彻底的整理好"></a>1.一次整理好，彻底的整理好</h4><pre><code>1.你想要什么的生活环境？
2.整理的不彻底，就永远无法整理好。只有完善整理才不会出现反弹
3.通过一次性整理，使意识发生戏剧性的变化；而不是培养每天整理一点的习惯
4.必须亲自体验一次彻底的整理。只要一次就好，请一件一件的判断，自己拥有的物品该放下还是留下，并设定所有物品的位置</code></pre><h4 id="2-确定物品的去留，设定物品放置的位置"><a href="#2-确定物品的去留，设定物品放置的位置" class="headerlink" title="2.确定物品的去留，设定物品放置的位置"></a>2.确定物品的去留，设定物品放置的位置</h4><pre><code>1.整理必须从丢弃开始
2.心动：留下心动的东西，丢掉不心动的东西
3.整理的本意不是选择“丢弃的东西”，而是选择要留下的东西</code></pre><h4 id="3-按物品的类别进行整理"><a href="#3-按物品的类别进行整理" class="headerlink" title="3.按物品的类别进行整理"></a>3.按物品的类别进行整理</h4><pre><code>1.按不同场所,不同房间进行整理，是整理上的一个致命错误。而是按物品的类别进行整理
2.必须按物品的类别进行思考，把同一类东西全部集中在一起，然后做一次性判断</code></pre><h4 id="4-东西竖着放，不能横着放"><a href="#4-东西竖着放，不能横着放" class="headerlink" title="4.东西竖着放，不能横着放"></a>4.东西竖着放，不能横着放</h4><pre><code>1.如何折叠
2.放置在合适的盒子
3.容器（装东西）</code></pre><h4 id="5-整理的类别"><a href="#5-整理的类别" class="headerlink" title="5.整理的类别"></a>5.整理的类别</h4><pre><code>1.衣服，鞋子
2.不改变人的意识，就不可能改变人的习惯
3.反弹：即使做了一次性彻底的整理，就不应该出现反弹（和减肥一样）
4.每天都整理一点，永远整理不好</code></pre>]]></content>
      <categories>
        <category>目标</category>
      </categories>
  </entry>
  <entry>
    <title>git</title>
    <url>/2019/11/23/book/git/</url>
    <content><![CDATA[<h1 align="center">git状态和撤销提交</h1>

<p>一. Git的几种状态</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">未修改</span><br><span class="line">       原始内容</span><br><span class="line">已修改    ↓   </span><br><span class="line">       工 作 区</span><br><span class="line">已暂存    ↓    git add</span><br><span class="line">       暂 存 区</span><br><span class="line">已提交    ↓    git commit</span><br><span class="line">       本地仓库</span><br><span class="line">已推送    ↓    git push</span><br><span class="line">       远程仓库</span><br></pre></td></tr></table></figure>

<p>二、已修改 未暂存(使用以下任意命令)</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">已经修改了文件，还未进行git add.即工作区的内容不想要了</span><br><span class="line">1.git checkout .</span><br><span class="line">2.git checkout -- &lt;FILENAME&gt;</span><br><span class="line">3.git reset --hard</span><br></pre></td></tr></table></figure>

<p>三、已暂存 未提交(git add.)</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">已经进行了git add，还未进行git commit.即暂存区的内容不想要了</span><br><span class="line">1.git reset,git checkout .</span><br><span class="line">2.git reset --hard</span><br><span class="line">3.git reset HEAD</span><br><span class="line">4.git reset HEAD -- &lt;FILENAME&gt;</span><br></pre></td></tr></table></figure>

<p>四、已提交 未推送(git commit)</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">已经进行了git commit，还未进行git push;使用远程仓库覆盖本地仓库</span><br><span class="line">git reset --hard origin/master</span><br></pre></td></tr></table></figure>

<p>五、已推送(git push)</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">回滚本地仓库，强制推送覆盖远程仓库</span><br><span class="line">git reset --hard HEAD^</span><br><span class="line">git push -f</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>读书</category>
      </categories>
  </entry>
  <entry>
    <title>linux</title>
    <url>/2019/11/23/tech/linux/</url>
    <content><![CDATA[<h1 id="Linux-基础"><a href="#Linux-基础" class="headerlink" title="Linux 基础"></a>Linux 基础</h1><table>
<thead>
<tr>
<th>命令</th>
<th>用途</th>
</tr>
</thead>
<tbody><tr>
<td>uname –help</td>
<td>内核名称、内核版本、硬件名称、硬件平台、操作系统</td>
</tr>
<tr>
<td>cat /proc/cpuinfo</td>
<td>CPU 详细信息</td>
</tr>
<tr>
<td>env</td>
<td>环境变量</td>
</tr>
<tr>
<td>free –help</td>
<td>查看内存使用量和交换区使用量</td>
</tr>
<tr>
<td>df –help</td>
<td>查看文件系统信息</td>
</tr>
<tr>
<td>du –help</td>
<td>汇总目录文件使用情况</td>
</tr>
<tr>
<td>uptime</td>
<td>查看系统运行时间、用户数、负载</td>
</tr>
<tr>
<td>cat /proc/loadavg</td>
<td>查看系统负载</td>
</tr>
<tr>
<td>ifconfig</td>
<td>查看防火墙设置</td>
</tr>
<tr>
<td>route –help</td>
<td>查看路由表</td>
</tr>
<tr>
<td>netstat -lntp</td>
<td>查看所有监听端口</td>
</tr>
<tr>
<td>netstat -nap</td>
<td>grep 80(2755)</td>
</tr>
<tr>
<td>kill</td>
<td>进程终止</td>
</tr>
<tr>
<td>killall</td>
<td>根据名称终止进程</td>
</tr>
<tr>
<td>ps -ef</td>
<td>查看所有进程</td>
</tr>
<tr>
<td>top</td>
<td>显示进程状态</td>
</tr>
<tr>
<td>who</td>
<td>查看当前登录用户</td>
</tr>
<tr>
<td>last</td>
<td>查看用户登录日志</td>
</tr>
<tr>
<td>cut -d: -f1 /etc/passwd</td>
<td>查看系统所有用户</td>
</tr>
<tr>
<td>cut -d: -f1 /etc/group</td>
<td>查看系统所有组</td>
</tr>
<tr>
<td>crontab -l</td>
<td>查看当前用户计划任务</td>
</tr>
<tr>
<td>rpm -qa</td>
<td>查看所有安装的软件包</td>
</tr>
<tr>
<td>date</td>
<td>系统时间</td>
</tr>
<tr>
<td>reboot</td>
<td>系统重启</td>
</tr>
<tr>
<td>poweroff</td>
<td>关机</td>
</tr>
</tbody></table>
<p>文件复制</p>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
  </entry>
  <entry>
    <title>php</title>
    <url>/2019/11/23/tech/php/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>技术</category>
      </categories>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2019/11/20/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>
]]></content>
  </entry>
</search>
